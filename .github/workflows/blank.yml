name: Sync Notebooks to Documentation

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install gdrive
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget -O gdrive "https://github.com/prasmussen/gdrive/releases/download/2.1.0/gdrive-linux-x64"
        chmod +x gdrive
        sudo install gdrive /usr/local/bin/gdrive

    - name: Configure gdrive with Service Account
      run: |
        echo "${{ secrets.GDRIVE_SERVICE_ACCOUNT_KEY }}" > gdrive-service-account.json
        gdrive --service-account gdrive-service-account.json list

    - name: Convert and Sync Notebooks
      run: |
        set -e  # Exit immediately if a command exits with a non-zero status
        # Fetch all branches and tags to ensure HEAD~1 is available
        git fetch --all

        # Check if HEAD~1 is available
        if git rev-parse --verify HEAD~1 >/dev/null 2>&1; then
          echo "HEAD~1 found"
          # Create a list of modified or new .ipynb files
          files=$(git diff --name-only HEAD~1 HEAD)
        else
          echo "HEAD~1 not found, handling initial commit or very new branch"
          # Handle initial commit or very new branch
          files=$(git ls-files --others --exclude-standard --full-name main)
        fi

        echo "All changed files:"
        echo "$files"

        # Filter for Jupyter notebook files
        notebook_files=$(echo "$files" | grep '^main/.*\.ipynb$' || true)

        echo "Jupyter notebook files to be processed:"
        echo "$notebook_files"

        if [ -z "$notebook_files" ]; then
          echo "No Jupyter notebook files to convert."
          exit 0
        fi

        # Process each notebook file
        while IFS= read -r file; do
          # Generate the target path in the documentation folder
          target="documentation/${file#main/}"
          base_name=$(basename "$target" .ipynb)
          dir_name=$(dirname "$target")
          echo "Processing \"$file\" -> \"$dir_name\""

          # Create the target directory if it doesn't exist
          mkdir -p "$dir_name"

          # Convert the .ipynb file to HTML with light theme
          echo "Converting \"$file\" to HTML with light theme"
          jupyter nbconvert --to html "$file" --execute --output "${base_name}_light.html" --output-dir "$dir_name"

          # Apply dark theme and convert to HTML
          echo "Converting \"$file\" to HTML with dark theme"
          export THEME=dark
          jupyter nbconvert --to html "$file" --HTMLExporter.theme=dark --execute --output "${base_name}_dark.html" --output-dir "$dir_name"

          # Upload the notebook to Google Drive
          echo "Uploading \"$file\" to Google Drive"
          gdrive --service-account gdrive-service-account.json upload --parent ${{ secrets.GDRIVE_FOLDER_ID }} "$file"
        done <<< "$notebook_files"

        # Check the documentation directory
        echo "Contents of the documentation directory:"
        ls -R documentation

    - name: Commit and Push changes
      run: |
        if [ -d "documentation" ] && [ "$(ls -A documentation)" ]; then
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add documentation
          git diff-index --quiet HEAD || git commit -m "Update documentation with new or modified notebooks"
          git push
        else
          echo "No changes to commit."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}